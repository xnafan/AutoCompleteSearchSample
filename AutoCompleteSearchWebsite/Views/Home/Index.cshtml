@model             ErrorViewModel

@{
    ViewData["Title"] = "Search";
}

<h1>Search</h1>

<h4>ErrorViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form action="/Home/Search" method="post" autocomplete="off">
            <div class="autocomplete" style="width:300px;">
                <input type="text" id="search-string" name="search-string" />
            </div>
            <input type="submit" value="Search" />
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
<script>
    data = [];
    setupAutocomplete();
    async function  setupAutocomplete(){
    let apiUrl = "https://localhost:7059/";
    let ressourceUrl = "api/games/searchgamenames";
    let queryParameter = "?partOfNameSearch=";
    let inputField = document.querySelector("#search-string");
    let completeUrl = apiUrl + ressourceUrl + queryParameter + inputField.value
    let response = await fetch(completeUrl);
    let strings = await response.text();
    data = JSON.parse(strings);
    autocomplete(document.getElementById("search-string"), data);
    }
</script>